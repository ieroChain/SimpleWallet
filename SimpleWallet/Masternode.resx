<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>